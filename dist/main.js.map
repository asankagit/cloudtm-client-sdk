{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./tagmanager.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","result","fetch","then","res","body","getReader","read","done","str","String","fromCharCode","apply","catch","e","console","log","postData","data","method","JSON","stringify","AWS","config","credentials","CognitoIdentityCredentials","IdentityPoolId","region","err","alert","error","kinesis","Kinesis","apiVersion","blogContent","document","getElementById","scrollableHeight","clientHeight","recordData","TID","addEventListener","event","clearTimeout","setTimeout","scrollableElement","target","scrollHeight","scrollTop","scrollTopPercentage","Math","round","scrollBottomPercentage","record","Data","blog","window","location","href","time","Date","PartitionKey","identityId","push","setInterval","length","putRecords","Records","StreamName","UTM","this","isLoading","writeClickStrem","viewClickStrem","help","_postdata","_utm"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 37);\n","// import AWS from \"aws-sdk\"\r\n// Configure Credentials to use Cognito\r\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({\r\n    IdentityPoolId: 'us-east-2:d3cec5af-7888-4dd0-8ba0-bb05bf2181b8'\r\n});\r\n\r\nAWS.config.region = 'us-east-2';\r\n// We're going to partition Amazon Kinesis records based on an identity.\r\n// We need to get credentials first, then attach our event listeners.\r\nAWS.config.credentials.get(function (err) {\r\n    // attach event listener\r\n    if (err) {\r\n        alert('Error retrieving credentials.');\r\n        console.error(err);\r\n        return;\r\n    }\r\n    // create Amazon Kinesis service object\r\n    var kinesis = new AWS.Kinesis({\r\n        apiVersion: '2013-12-02'\r\n    });\r\n\r\n    // Get the ID of the Web page element.\r\n    var blogContent = document.getElementById('BlogContent');\r\n\r\n    // Get Scrollable height\r\n    var scrollableHeight = blogContent.clientHeight;\r\n\r\n    var recordData = [];\r\n    var TID = null;\r\n    blogContent.addEventListener('scroll', function (event) {\r\n        clearTimeout(TID);\r\n        // Prevent creating a record while a user is actively scrolling\r\n        TID = setTimeout(function () {\r\n            // calculate percentage\r\n            var scrollableElement = event.target;\r\n            var scrollHeight = scrollableElement.scrollHeight;\r\n            var scrollTop = scrollableElement.scrollTop;\r\n\r\n            var scrollTopPercentage = Math.round((scrollTop / scrollHeight) * 100);\r\n            var scrollBottomPercentage = Math.round(((scrollTop + scrollableHeight) / scrollHeight) * 100);\r\n\r\n            // Create the Amazon Kinesis record\r\n            var record = {\r\n                Data: JSON.stringify({\r\n                    blog: window.location.href,\r\n                    scrollTopPercentage: scrollTopPercentage,\r\n                    scrollBottomPercentage: scrollBottomPercentage,\r\n                    time: new Date()\r\n                }),\r\n                PartitionKey: 'partition-' + AWS.config.credentials.identityId\r\n            };\r\n            recordData.push(record);\r\n        }, 100);\r\n    });\r\n\r\n    // upload data to Amazon Kinesis every second if data exists\r\n    setInterval(function () {\r\n        if (!recordData.length) {\r\n            return;\r\n        }\r\n        // upload data to Amazon Kinesis\r\n        kinesis.putRecords({\r\n            Records: recordData,\r\n            StreamName: 'MyKinesisStream'\r\n        }, function (err, data) {\r\n            if (err) {\r\n                console.error(err);\r\n            }\r\n        });\r\n        // clear record data\r\n        recordData = [];\r\n    }, 1000);\r\n});\r\n\r\nasync function fetchBasketItes() {\r\n    let result = \"\"\r\n    var promise = await fetch(\"https://jzjlb1p0tc.execute-api.ap-south-1.amazonaws.com/Prod/clickstream?basketId=zxczxc\")\r\n        .then(res => res.body)\r\n        .then(body => {\r\n            const reader = body.getReader()\r\n            return reader.read().then(({ done, value }) => {\r\n                var str = String.fromCharCode.apply(null, value);\r\n                result = str\r\n                return str\r\n            })\r\n        })\r\n        .catch(e => console.log(e))\r\n        .catch(e => console.log(e))\r\n    console.log(result)\r\n\r\n};\r\n\r\n// Example POST method implementation:\r\nasync function postData(data = {}) {\r\n    \r\n    let result = \"\"\r\n    result = await fetch(\"https://jzjlb1p0tc.execute-api.ap-south-1.amazonaws.com/Prod/clickstream\", {       \r\n        method: 'POST',\r\n        body: JSON.stringify(data)\r\n    })\r\n    .then(res => res.body).then(body =>{\r\n        const reader = body.getReader(); \r\n        return reader.read().then(  ({done, value}) => {\r\n            console.log(\">>\",done,value)\r\n            result = String.fromCharCode.apply(null, value)\r\n            return result\r\n        }\r\n        )   })\r\n    .catch(e => console.log(e))\r\n    console.log(result)\r\n}\r\n\r\nfunction packtest () {\r\n\r\n    console.log(\"pack working\")\r\n}\r\nconst help = \"UTM(Universal Tag Manger) is free and opensource software \\n \"\r\n    +\"writeClickStrem to add click event data \\n viewClickStrem to view event data\";\r\n\r\nconst UTM = {\r\n    set current(name) {\r\n      this.log.push(name);\r\n    },\r\n    log: [],\r\n    isLoading: true,\r\n    writeClickStrem: postData,\r\n    viewClickStrem: fetchBasketItes,\r\n    help\r\n\r\n}\r\n\r\nwindow.addEventListener(\"click\", packtest)\r\nwindow._postdata = postData\r\nwindow._utm = UTM\r\n"],"sourceRoot":""}